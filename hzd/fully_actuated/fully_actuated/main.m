% q4 q1_right
% q5 q1_left
% q6 q2_right  positive
% q7 q2_left   positive
% q8 q3_right
% q9 q3_left


clc
close all
clear
tic
addpath gen

global t_global y_overall dy_overall Fr_overall ...
    Fr x_torso_desired_overall s_overall norm_u_overall Lyapunov_fun t_under...
      u_star_global u_global
%%
tspan=[0 5.8];

Lyapunov_fun= 0;
t_under = 0;
norm_u_overall = 0;
s_overall = 0;
t_global = 0;
y_overall = zeros(5,1);
dy_overall = zeros(5,1);
Fr_overall = zeros(3,1);
x_torso_desired_overall=0;
error_overall = 0;
%x0(3) = 0.2876;
x0=zeros(1,18);
Fr = 16;
x0(4)=-degtorad(15);
x0(5)=degtorad(5);
x0(6)=degtorad(30);
x0(7)=degtorad(30);
x0(8)=-degtorad(15);
x0(9)=-degtorad(15);
%load initial_pose.mat

%x0 = [-0.0333;0.7;0.3;-1.1039;-0.7604;0.6903;1.1177;0.1135;-0.6573;...
%    0.2;0;0.018;-0.107;-0.5603;0.6543;1.1054;-0.5654;-0.5631];

a=ForwardKinematics.RFootPose(x0(1:9));  % Rfoot_pose_func is the expression generated by FROST


x0(3)=x0(3)-a(3);
a=ForwardKinematics.RFootPose(x0(1:9));
x0(2)=x0(2)-a(2);






%%
t=[];
x_sol=[];
contact_vel_vec = [];
step=1;
t_end_of_previous_step=0;

t_interrupt=[];
foot_index = -1;

Alpha=[0.7, 0.7, 0.70, 0.7, 0.7, 0.7, 0.7,...
             0.3,   0.3,   0.3,   0.3,   0.3,   0.3,   0.3,...
            -0.25,-0.08,-0.06,0,  0.06,0.08,0.25,...
             0,   0.03, 0.2, 0.17,0.16, 0.03, -0.001,...
             0,   0,  0,0, 0,0,0];  % walking parameters
%%    

   
if foot_index == -1
    current_stance_foot_position=ForwardKinematics.RFootPose(x0(1:9));  %Right foot as stance foot
elseif foot_index == 1
    current_stance_foot_position=ForwardKinematics.LFootPose(x0(1:9));  %Left foot as stance foot
end

for i=1:step
    options_fully=odeset('Events',@(t,x) switch_event(t,x,foot_index),'RelTol',1e-6,'AbsTol',1e-6);
    
    %% fully actuated phase
    [t_each_step_f,x_each_step_f,te_f,xe_f,ie_f]=ode45(@(t,x) dynamics.dynamics(t,x,...
        foot_index,Alpha,t_end_of_previous_step,current_stance_foot_position),tspan,x0,options_fully);
    %fprintf('Im done solving fully actuated case\n')
    if isempty(t)
        
        t=t_each_step_f;
        x_sol=x_each_step_f;
        t_interrupt=te_f;
        t_interrupt_each_step=te_f;
        t_end_of_fully_actuated_phase=t_each_step_f(end) ;
        stance_foot_position_overall_mat=current_stance_foot_position';
        
        contact = ones(length(t_each_step_f),1)*foot_index;
        contact_vec = contact;
       
    else
        t_so_far=t_each_step_f+t(end);
        t_interrupt_each_step=te_f+t(end);
        t=[t;t_so_far];
        x_sol=[x_sol;x_each_step_f];
        t_end_of_fully_actuated_phase=t(end);
        
        t_interrupt=[t_interrupt;t_interrupt_each_step];
        
        
        contact = ones(length(t_each_step_f),1)*foot_index;
        contact_vec = [contact_vec;contact];
        
    end
    
    
    %%
    t_end = t(end);
    %dq_plus=resetmap_(x_sol(end,:),foot_index,t_end);
    dq_plus=dynamics.resetmap_(x_sol(end,:),foot_index,t_end);
    x0 = [x_sol(end,1:9),dq_plus'];
    if foot_index==-1
        current_stance_foot_position=ForwardKinematics.LFootPose(x0(1:9));
        fprintf('heihei')
    elseif foot_index == 1
        current_stance_foot_position=ForwardKinematics.RFootPose(x0(1:9));
        fprintf('xixi')
    end
    fprintf('hey,Ive finished %d step\n',i)
    t_end_of_previous_step=t(end);
    stance_foot_position_overall_mat=[stance_foot_position_overall_mat;current_stance_foot_position'];
    foot_index=(-1)^(i+1);
 %   current_position=[current_position;current_stance_foot_position+r*sin(x_each_step(:,1))];
 %   current_stance_foot_position=current_stance_foot_position+current_step_length;
    
end
%% run animation
animation(t,x_sol,contact_vec,0,'robot_dynamic')
%%
